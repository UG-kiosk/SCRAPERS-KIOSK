name: DEVELOP-CI-CD

on:
    push:
        branches:
            - develop

jobs:
    install-dependencies:
        runs-on: ubuntu-latest
        container: node:21-alpine

        steps:
            - uses: actions/checkout@v4

            - name: install dependencies
              run: yarn install --frozen-lockfile

            - name: Tar node_modules directory
              run: tar czf node_modules.tar.gz -C node_modules .

            - name: Upload node_modules_artifact
              uses: actions/upload-artifact@v4
              with:
                  name: node_modules
                  path: node_modules.tar.gz

    run-unit-tests:
        needs: [install-dependencies]
        runs-on: ubuntu-latest
        container: node:21-alpine

        steps:
            - uses: actions/checkout@v4

            - name: Download node_modules artifact
              uses: actions/download-artifact@v4
              with:
                  name: node_modules

            - name: Extract node_modules
              run: mkdir node_modules && tar xzf node_modules.tar.gz -C ./node_modules

            - name: unit test
              run: yarn test:unit:ci

    release:
        needs: [run-unit-tests]
        runs-on: ubuntu-latest

        env:
            image_tag: ${{vars.DOCKER_IMAGE_OWNER}}/kiosk-scrapers-dev:${GITHUB_SHA}
            image_latest: ${{vars.DOCKER_IMAGE_OWNER}}/kiosk-scrapers-dev:latest

        steps:
            - uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build Docker Images
              run: |
                  docker build -t ${{ env.image_tag }} .
                  docker tag ${{ env.image_tag }} ${{ env.image_latest }}

            - name: Push Docker Images
              run: |
                  docker push ${{ env.image_tag }}
                  docker push ${{ env.image_latest }}

    deploy:
        needs: [release]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Trigger deploy
              run: curl --request POST '${{ secrets.DEPLOY_SCRAPERS_DEVELOP_WEBHOOK }}'
